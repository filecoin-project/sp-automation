---
- name: Check out Boost
  ansible.builtin.git:
    repo: "{{ boost_git_repo }}"
    dest: "{{ build_dir }}/boost"
    version: "{{ boost_version }}"
  become: true
  become_user: "{{ lotus_user }}"

# TODO(feat): Detect version differences and rebuild Boost if necessary.
# Partially implemented, needs further testing and refinement - W
# - name: Check Boost version if Boost is installed
#   ansible.builtin.command:
#     cmd: "/usr/local/bin/boostd --version"
#   register: boost_version_installed
#   failed_when: false
#   changed_when: false
#   when: boost_version_installed is not defined
#   become: true
#   become_user: "{{ lotus_user }}"
#   ignore_errors: true

# - name: Check if the Boost version matches the version we want to install, and if it does not, remove all Boost build files
#   ansible.builtin.command:
#     cmd: "make clean"
#     chdir: "{{ build_dir }}/boost"
#   when: boost_version_installed != boost_version
#   become: true
#   become_user: "{{ lotus_user }}"

- name: Build Boost
  ansible.builtin.shell:
    cmd: "source /etc/profile.d/golang.sh ; source {{ lotus_user_details.home }}/.cargo/env ; make clean {% if not use_calibrationnet %}build{% else %}calibnet{% endif %}"
    chdir: "{{ build_dir }}/boost"
    creates: "{{ build_dir }}/boost/boostd"
    executable: /bin/bash
  register: build_boost
  become: true
  become_user: "{{ lotus_user }}"

- name: Install Boost
  ansible.builtin.make:
    chdir: "{{ build_dir }}/boost"
    target: install
  become: true
  when: build_boost.changed