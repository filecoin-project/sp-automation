---
- name: Read Lotus Miner API token from file
  ansible.builtin.command:
    cmd: "cat {{ lotus_miner_api_token_file }}"
  register: lotus_miner_api_token
  become_user: "{{ lotus_user }}"
  become: true
  changed_when: false
  ignore_errors: true
  when: lotus_miner_api_token_file is defined

- name: If we successfully read a Lotus Miner API token, flatten the variable.
  ansible.builtin.set_fact:
    lotus_miner_api_token: "{{ lotus_miner_api_token.stdout }}"
  when: lotus_miner_api_token.stdout != "" and lotus_miner_api_token.rc == 0

- name: Set miner_api_info
  ansible.builtin.set_fact:
    miner_api_info: "{{ lotus_miner_api_token }}:/ip4/{{ lotus_miner_ip }}/tcp/{{ lotus_miner_port }}/http"

- name: Set miner_api_info in .bashrc
  ansible.builtin.lineinfile:
    path: "{{ lotus_user_details.home }}/.bashrc"
    line: "export MINER_API_INFO=$(cat {{ lotus_miner_api_token_file }}):/ip4/{{ lotus_miner_ip }}/tcp/{{ lotus_miner_port }}/http"
    state: present
    create: true
    owner: "{{ lotus_user }}"
    group: "{{ lotus_user }}"
    mode: 0644
    # TODO(decision) We probably want MINER_API_INFO to only be available to interactive shells.
    # If we change our mind on that later, uncomment the following line.
    #insertbefore: "# If not running interactively, don't do anything"
  when: lotus_miner_api_token is defined

- name: Check that we successfully read the Lotus Miner API token.
  ansible.builtin.assert:
    that:
      - lotus_miner_api_token is defined
    fail_msg: "We were unable to read the Lotus Miner API token from {{ lotus_miner_api_token_file }}. Please check the file exists and is readable by the lotus user."

# Get our public IP address if we haven't grabbed it already earlier in a play
- name: Get public IPv4 address using ifconfig.me
  ansible.builtin.uri:
    url: https://ifconfig.me
    return_content: yes
    status_code: 200
    validate_certs: false
    http_agent: curl
  register: public_ipv4
  until: public_ipv4.status == 200
  retries: 3
  delay: 3
  when: lotus_public_ip is not defined

- name: If we now have a public IPv4 address, use it
  ansible.builtin.set_fact:
    lotus_public_ip: "{{ public_ipv4.content }}"
  when: lotus_public_ip is not defined and public_ipv4.status == 200

# Announce the miner
- name: Print a message about announcing the miner
  ansible.builtin.debug:
    msg: "Announcing Lotus miner {{ lotus_public_ip }}:{{ lotus_miner_port }} on-chain..."
  when: (ready_for_mainnet and not use_calibrationnet) or use_calibrationnet

- name: If we are not using calibrationnet, but we are not explicitly ready_for_mainnet, exit with an error
  ansible.builtin.fail:
    msg: "You must set ready_for_mainnet to true in order to announce your mainnet miner on-chain. Check the docs for more information."
  when: not ready_for_mainnet and not use_calibrationnet

- name: Check if we already have a last_announcement file (in which case we don't need to announce)
  ansible.builtin.stat:
    path: "{{ lotus_miner_path }}/last_announcement"
  register: last_announcement_file
  changed_when: false
  when: (ready_for_mainnet and not use_calibrationnet) or use_calibrationnet

# TODO(lint): ignore-errors: Use failed_when and specify error conditions instead of using ignore_errors.
# ansible-lint is correct, this would be cleaner.
- name: Announce Lotus miner
  ansible.builtin.shell:
    cmd: "lotus-miner actor set-addrs /ip4/{{ lotus_public_ip }}/tcp/{{ lotus_libp2p_port }}"  # noqa ignore-errors
    executable: /bin/bash
  environment:
    LOTUS_PATH: "{{ lotus_path }}"
    LOTUS_MINER_PATH: "{{ lotus_miner_path }}"
  become_user: "{{ lotus_user }}"
  become: true
  register: lotus_announcement
  changed_when: false
  ignore_errors: false
  when: not last_announcement_file.stat.exists and ((ready_for_mainnet and not use_calibrationnet) or use_calibrationnet)

- name: If we successfully announced, write the announcement to a file
  ansible.builtin.copy:
    content: "{{ lotus_announcement.stdout }}"
    dest: "{{ lotus_miner_path }}/last_announcement"
    owner: "{{ lotus_user }}"
    group: "{{ lotus_user }}"
    mode: 0600
  when: ( lotus_announcement.rc | default(1) ) == 0