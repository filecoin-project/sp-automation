---
- name: Check balances of wallets
  shell: "export LOTUS_PATH={{ lotus_path }} ; lotus wallet list"
  register: wallet_list
  become_user: "{{ lotus_user }}"
  become: true
  changed_when: false

# TODO(bug): We need a less fragile way to parse for the FIL balance, but this will do for now.
- name: Parse the wallet output to get the balances
  set_fact:
    owner_wallet_balance: "{{ wallet_list.stdout_lines[1].split(' ')[2] }}"
    worker_wallet_balance: "{{ wallet_list.stdout_lines[2].split(' ')[2] }}"
  when: wallet_list.stdout != ""

# We ask the user to transfer funds if the balance of either wallet is below {{ wallet_fund_threshold }} FIL.
- name: Prompt the user to transfer funds
  debug:
    msg:
      - "You will need to transfer funds to your Filecoin wallets to continue."
      - "Current owner wallet balance: {{ owner_wallet_balance }} FIL [{{ owner_wallet_address }}]"
      - "Current worker wallet balance: {{ worker_wallet_balance }} FIL [{{ worker_wallet_address }}]"
  when: "owner_wallet_balance | float < wallet_fund_threshold or worker_wallet_balance | float < wallet_fund_threshold"

- name: Pause to give the user a chance to transfer funds
  pause:
    prompt: "Press [ENTER] to continue once you have transferred funds to your wallets"
  when: "owner_wallet_balance | float < wallet_fund_threshold or worker_wallet_balance | float < wallet_fund_threshold"

# We loop until both balances have at least {{ wallet_fund_threshold }} FIL.
- name: Waiting for both wallets to be funded with at least {{ wallet_fund_threshold }} FIL
  retries: 180
  delay: 10
  until: 
    - "wallet_list_loop.stdout_lines[1].split(' ')[2] | float >= wallet_fund_threshold"
    - "wallet_list_loop.stdout_lines[2].split(' ')[2] | float >= wallet_fund_threshold"
  shell: "export LOTUS_PATH={{ lotus_path }} ; lotus wallet list"
  register: wallet_list_loop
  changed_when: false
  become_user: "{{ lotus_user }}"
  become: true