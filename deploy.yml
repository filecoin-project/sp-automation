---
- name: Create Lotus user and group
  hosts: lotus
  become: true

  tasks:
    - name: Create Lotus user and group
      ansible.builtin.include_tasks: tasks/lotus_user_and_group.yml

- name: Create Boost user and group
  hosts: boost
  become: true

  tasks:
    - name: Create Boost user and group
      ansible.builtin.include_tasks: tasks/boost_user_and_group.yml

- name: Deploy Lotus
  hosts: lotus_primary
  become: true

  roles:
    - { role: zorlin.nvidia_driver, when: install_nvidia_driver | bool }
    - zorlin.lotus_daemon

- name: Deploy Lotus Miner
  hosts: lotus_miner
  become: true

  roles:
    - { role: zorlin.nvidia_driver, when: install_nvidia_driver | bool }
    - zorlin.lotus_miner

- name: Deploy YugabyteDB
  hosts: yugabytedb
  become: true

  roles:
    - zorlin.yugabytedb

- name: Deploy Boost
  hosts: boost
  become: true

  roles:
    - zorlin.fil_boostd

- name: Collect Boost information necessary for next stages
  hosts: boost
  become: true

  tasks:
    - name: Get boost info
      ansible.builtin.include_tasks: tasks/get_boost_info.yml

- name: Set Lotus actors for Boost
  hosts: lotus_miner
  become: true

  roles:
    - zorlin.lotus_boost_actors

- name: Collect Lotus API info and token
  hosts: lotus_primary
  become: true

  tasks:
    - name: Get lotus info
      ansible.builtin.include_tasks: tasks/get_lotus_info.yml

- name: Collect Lotus Miner API info and token
  hosts: lotus_miner
  become: true

  tasks:
    - name: Get lotus miner info
      ansible.builtin.include_tasks: tasks/get_lotus_miner_info.yml

- name: Deploy Booster Bitswap
  hosts: booster_bitswap
  become: true

  roles:
    - zorlin.fil_booster_bitswap

- name: Deploy Booster HTTP and Nginx
  hosts: booster_http
  become: true

  vars:
    rustup_user: "{{ boost_user }}"

  roles:
    - zorlin.fil_booster_http
    - geerlingguy.nginx

- name: Configure Nginx for the stack
  hosts: booster_http
  become: true

  tasks:
    - name: Configure Nginx
      ansible.builtin.include_tasks: tasks/configure_nginx.yml

  handlers:
    - name: Reload nginx
      ansible.builtin.service:
        name: nginx
        state: reloaded

- name: Configure TLS/SSL using Certbot and Let's Encrypt
  hosts: booster_http
  become: true

  pre_tasks:
    - name: Check that user has changed the default email address
      ansible.builtin.assert:
        that:
          - certbot_email != "hello@filecoin.io"
        fail_msg: "Please update the sp_email setting to your own email address for Certbot registrations."
        success_msg: "Email address {{ certbot_email }} will be used for Certbot."

  roles:
    - role: robertdebock.certbot
      certbot_domains:
        - "{{ sp_domain }}"
      certbot_system: nginx

  handlers:
    - name: Reload nginx
      ansible.builtin.service:
        name: nginx
        state: reloaded
